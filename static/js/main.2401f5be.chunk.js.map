{"version":3,"sources":["components/SearchForm.js","components/UseFetchJobs.js","components/Job.js","components/Spinner.js","components/JobsPagination.js","components/ErrorDisplay.js","App.js","serviceWorker.js","index.js","images/error.png"],"names":["SearchForm","params","onParamChange","Form","className","Row","Group","as","Col","Label","Control","onChange","value","description","name","type","location","xs","Check","full_time","id","label","ACTIONS","BASE_URL","reducer","state","action","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","style","wordBreak","marginTop","source","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","Collapse","in","Spinner","width","role","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","ErrorDisplay","ErrorImage","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","UseFetchJobs","getJobs","map","key","Container","param","target","prevParams","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.2401f5be.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\nfunction SearchForm({ params, onParamChange }) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row className=\"align-items-end\">\n              <Form.Group as={Col}>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control \n                    onChange={onParamChange}   \n                    value={params.description} \n                    name=\"description\" \n                    type=\"text\" />\n              </Form.Group>\n              <Form.Group as={Col}>\n                  <Form.Label>Location</Form.Label>\n                  <Form.Control \n                    onChange={onParamChange}\n                    value={params.location}\n                    name=\"location\"\n                    type=\"text\" />\n              </Form.Group>\n              <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n                  <Form.Check \n                    onChange={onParamChange}\n                    value={params.full_time}\n                    name=\"full_time\"\n                    id=\"full-time\"\n                    label=\"Only Full Time\"\n                    type=\"checkbox\"\n                    className=\"mb-2\" />\n              </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n\nexport default SearchForm\n","import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { loading: true, jobs: [] }\n\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs }\n\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return { ...state, hasNextPage: action.payload.hasNextPage }\n            \n        default:\n            return state\n    }\n}\n\nexport default function UseFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, {\n        jobs: [],\n        loading: true })\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n\n        const cancelToken2 = axios.CancelToken.source()\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 }})\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e }})\n        })\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n\n    }, [params, page])\n\n    return state\n}","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nfunction Job({ job }) {\n    const [open, setOpen] = useState(false)\n    return (\n        <Card className=\"mb-3 cards\">\n            <Card.Body>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Card.Title>\n                            {job.title} -  \n                            <span className=\"text-muted font-weight-light ml-2\">\n                                {job.company}\n                            </span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted mb-2\">\n                           {new Date(job.created_at).toLocaleDateString()} \n                        </Card.Subtitle>\n                        <Badge variant=\"success\" className=\"mr-2\">{job.type}</Badge>\n                        <Badge variant=\"success\">{job.location}</Badge>\n                        <div style={{ wordBreak: 'break-all', marginTop: 15 }}>\n                            <ReactMarkdown source={job.how_to_apply} />\n                        </div>\n                    </div>\n                    <img className=\"d-none d-md-block\" height=\"50\" src={job.company_logo} alt={job.company} />\n                </div>\n                <Card.Text>\n                    <Button variant=\"primary\" onClick={() => setOpen(!open)}>\n                        {open ? 'Hide Details' : 'View Details'}\n                    </Button>\n                </Card.Text>\n                <Collapse in={open}>\n                   <div className=\"mt-3\">\n                       <ReactMarkdown source={job.description} />\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Job\n","import React from 'react'\n\nfunction Spinner() {\n    return (\n      <div className=\"d-flex justify-content-center spin\">\n        <div className=\"spinner-grow text-danger mr-3\" style={{width: '3rem', height: '3rem'}} role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-warning mr-3\" style={{width: '3rem', height: '3rem'}} role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-success\" style={{width: '3rem', height: '3rem'}} role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nfunction JobsPagination({ page, setPage, hasNextPage }) {\n\n    function adjustPage(amount) {\n        setPage(prevPage => prevPage + amount)\n    }\n    \n    return (\n        <Pagination>\n            { page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} /> }\n                { page !== 1 && <Pagination.Item onClick={() => setPage(1) }>1</Pagination.Item> }\n                { page > 2 && <Pagination.Ellipsis /> }\n                { page > 2 && <Pagination.Item onClick={() => adjustPage(-1)} >{page - 1}</Pagination.Item> }\n                <Pagination.Item active>{page}</Pagination.Item>\n                { hasNextPage && <Pagination.Item onClick={() => adjustPage(1)} >{page + 1}</Pagination.Item> }\n            { hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} /> }\n        </Pagination>\n    )\n}\n\nexport default JobsPagination\n","import React from 'react'\nimport ErrorImage from 'images/error.png'\n\nfunction ErrorDisplay() {\n    return (\n        <div className=\"card mb-3 cards\">\n            <img className=\"card-img-top\" src={ErrorImage} alt=\"error\" />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Oops an Error</h5>\n                <p className=\"card-text\">Sometimes you don't get what you want</p>\n                <p className=\"card-text\">Instead of giving up, why don't you punch back?</p>\n                <p className=\"card-text\">\n                    <small className=\"text-muted\">Try again bud</small>\n                </p>\n            </div> \n        </div>\n    )\n}\n\nexport default ErrorDisplay\n","import React, { useState } from 'react'\nimport SearchForm from 'components/SearchForm'\nimport UseFetchJobs from 'components/UseFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from 'components/Job'\nimport 'App.css'\nimport Spinner from 'components/Spinner'\nimport JobsPagination from 'components/JobsPagination' \nimport ErrorDisplay from 'components/ErrorDisplay'\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = UseFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  var getJobs = jobs.map(job => {\n    return <Job key={job.id} job={job} />\n  })\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4 head\">Github Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      {loading ? <Spinner /> : error ? <ErrorDisplay /> : (\n        <>\n          <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n          {getJobs}\n          <div style={{marginTop: '1.5rem'}}>\n            <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n          </div>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error.cb222a84.png\";"],"sourceRoot":""}